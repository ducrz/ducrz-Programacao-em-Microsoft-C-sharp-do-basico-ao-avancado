Seção 4: C# Intermediário


Segundo Projeto.


20. O que vamos aprender nesta seção?



21. Conversão entre tipos de dados


Conversão implícita e explícita.

Conversões implícitas acontecem automaticamente, o compilador tenta "adivinhar" o tipo e realizar uma conversão.

Nas conversões explícitas é o programador que indica ao compilador qual tipo de conversão será realizada.

Um dos tipos de conversões mais frequentes é a conversão em String.

Datetime data = DateTime.Now

Console.Write(data.ToString());



Exemplo de conversão implícita:


int i =5;
DateTime data = DateTime.Now;
Console.WriteLine(i);
Console.WriteLine(data);


Outro exemplo(neste caso não funciona):

int i = 5;

DateTime data = DateTime.Now;

Console.WriteLine(i+data);


Neste caso é necessário a conversão explícita:

int i=5;
DateTime data = DateTime.Now;

Console.WriteLine(i.ToString() + data);

Agora o compilador sabe que o que queremos é mostrar os valores como string.
O valor de "i" é convertido explicitamente, já o "data" é convertido implicitamente pelo compilador.




22. Operações úteis em strings


Manipulação de strings, ou seja, operações de formatação e de dados.

Utilidade:

- Para criar um "parser" de um log;
- Manipular informações armazenadas em um banco de dados;
= Manipular ou criar strings em formato json;
- Manipular formato de data/hora
- Demais operações necessárias.


Algumas das funções com strings suportadas pelo C#:

SubString
Trim
TrimLeft
TrimRigth
Length
Replace
Constains
IndexOf



Concatenaço:

Concat(String,String)

+
StringBuilder

StringBuilder sb = new StringBuilder();
sb.Append("texto 1");
sb.Append("texto 2");
Console.WriteLine("Resultado "+sb);



Concatenação String.Format

Permite a criação de uma string baseada em um padrão. Podemos colocar dentro do padrão
da string de formatação alguns tokens que podem ser substituídos por variáveis passadas por
parâmetro no comando format.


string teste = String.Format("Vou colocar o {0} aqui.",""Parâmetro");


sTeste = String.Format("Formatação de string com {0} parâmetro.","Agora são {1}. Valor numérico: {2}",
1, Now(), 15.5);


sTeste = String.Format("Custom Format: {0:d/M/yyy HH:mm:ss}",dtHoje);
sTeste = String.Format("Formatação do número inteiro: {0:D}.",iNumero);
sTeste = String.Format("Formatação do número inteiro: {0:D4}.",iNumero);



Formatação:

ToLower
ToUpper
Replace




23. Criando funções em C#

24. Aplicações console e debug de aplicações

25. Manipulando listas, arrays e vetores

26. Tratamento de erros

27. Recapitulando